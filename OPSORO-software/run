#!/usr/bin/env python

import os
import sys

import os.path
import shutil

from git import Git, Repo

basedir = os.path.dirname(os.path.realpath(__file__))

# old = os.path.join(basedir, "opsoro")
# if os.path.exists(old):
#     # rename left-overs from old file structure
#     print """
# Found left-overs from old file structure, renaming to
# "octoprint.backup". Please remove this manually (I don't
# dare to do so myself since you might have changes in there
# I don't know anything about).
# """
#     os.rename(old, os.path.join(basedir, "opsoro.backup"))

# insert opsoro src system path to enable calling opsoro classes
sys.path.insert(0, os.path.join(basedir, "src"))

# ----------------------------------------------------------------------
# UPDATER
# ----------------------------------------------------------------------
git_dir = os.path.abspath(os.path.join(basedir, '..')) + '/'
backup_dir = '~/opsoro/backup/'
# Check if update is needed
if os.path.isfile(os.path.join(basedir, 'update.var')):
    if os.path.exists(backup_dir):
        # remove previous backup
        shutil.rmtree(backup_dir)

    os.makedirs(backup_dir)
    try:
        shutil.copytree(basedir, backup_dir)
    except:
        pass

    # Link git & update
    try:
        g = Git(git_dir)
        g.fetch('--all')
        g.reset('--hard origin/' + g.branch().split()[-1])
        # g.pull()
    except:
        pass

    os.remove(os.path.join(basedir, 'update.var'))
# ----------------------------------------------------------------------

import opsoro
opsoro.main()
